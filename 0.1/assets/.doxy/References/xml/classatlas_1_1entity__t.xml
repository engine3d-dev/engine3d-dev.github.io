<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classatlas_1_1entity__t" kind="class" language="C++" prot="public">
    <compoundname>atlas::entity_t</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classatlas_1_1entity__t_1a7aee710d558b11e5758db4a02447fa7b" prot="private" static="no" mutable="no">
        <type>flecs::entity</type>
        <definition>flecs::entity atlas::entity_t::m_entity_id</definition>
        <argsstring></argsstring>
        <name>m_entity_id</name>
        <qualifiedname>atlas::entity_t::m_entity_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="99" column="23" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classatlas_1_1entity__t_1a925077325bc7808a17904c75553f2da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::entity_t::entity_t</definition>
        <argsstring>()=default</argsstring>
        <name>entity_t</name>
        <qualifiedname>atlas::entity_t::entity_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="20" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a4f8d325fdfe56287c682112c9d3117c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::entity_t::entity_t</definition>
        <argsstring>(flecs::world *p_registry, const std::string &amp;p_tag)</argsstring>
        <name>entity_t</name>
        <qualifiedname>atlas::entity_t::entity_t</qualifiedname>
        <param>
          <type>flecs::world *</type>
          <declname>p_registry</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a879697cc3280b1ec9057341aa188d371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atlas::entity_t::entity_t</definition>
        <argsstring>(const flecs::entity &amp;p_entity)</argsstring>
        <name>entity_t</name>
        <qualifiedname>atlas::entity_t::entity_t</qualifiedname>
        <param>
          <type>const flecs::entity &amp;</type>
          <declname>p_entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="22" column="9" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1aa7e6238a804c004389feb3c44d18f4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::entity_t::~entity_t</definition>
        <argsstring>()</argsstring>
        <name>~entity_t</name>
        <qualifiedname>atlas::entity_t::~entity_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="25" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1aba5c460bfe8b1b05ba710ef1d811fb84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool atlas::entity_t::is_alive</definition>
        <argsstring>() const</argsstring>
        <name>is_alive</name>
        <qualifiedname>atlas::entity_t::is_alive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Flecs allows to check when an entity has been created </para>
</simplesect>
<simplesect kind="note"><para>Knowing when this entity lifecyle&apos;s ended </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="29" column="15" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a54ac61a14f16ae97dc83486855a84f48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atlas::entity_t::on_destruction</definition>
        <argsstring>()</argsstring>
        <name>on_destruction</name>
        <qualifiedname>atlas::entity_t::on_destruction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="31" column="14" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a9a4b1f94517e03d33d61dbff80cf930d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void atlas::entity_t::add</definition>
        <argsstring>()</argsstring>
        <name>add</name>
        <qualifiedname>atlas::entity_t::add</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Creates component in the ECS storage but does not assign it with a value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="36" column="14" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1af106934ead70c1b66eaf4e1ad351936a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent</type>
          </param>
        </templateparamlist>
        <type>const UComponent *</type>
        <definition>const UComponent * atlas::entity_t::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>atlas::entity_t::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Returns the component from the entity </para>
</simplesect>
<simplesect kind="note"><para>Flecs has you return a pointer for checking if the component is found </para>
</simplesect>
<simplesect kind="note"><para>If not found will return nullptr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="45" column="26" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a246b32fea88d795f2c8e8a8e3cab7ad0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent</type>
          </param>
        </templateparamlist>
        <type>UComponent *</type>
        <definition>UComponent * atlas::entity_t::get_mut</definition>
        <argsstring>() const</argsstring>
        <name>get_mut</name>
        <qualifiedname>atlas::entity_t::get_mut</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="50" column="20" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a731921a4fa54b0542d762874a6d86410" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool atlas::entity_t::has</definition>
        <argsstring>() const</argsstring>
        <name>has</name>
        <qualifiedname>atlas::entity_t::has</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Checks if specific component of type UComponent is provided to this entity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="57" column="15" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1ad5891e156866d930a05c19fbf612c5e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void atlas::entity_t::set</definition>
        <argsstring>(const UComponent &amp;p_component)</argsstring>
        <name>set</name>
        <qualifiedname>atlas::entity_t::set</qualifiedname>
        <param>
          <type>const UComponent &amp;</type>
          <declname>p_component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Setting a component TODO: Try to allow the set component to be set to its initial value Initial value should be set when the component that is set is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="69" column="14" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1ab559b7c8cc70eb3400f612cc101eb8c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent1</type>
          </param>
          <param>
            <type>typename UComponent2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void atlas::entity_t::set</definition>
        <argsstring>(const UComponent1 &amp;p_component1, const UComponent2 &amp;p_component2)</argsstring>
        <name>set</name>
        <qualifiedname>atlas::entity_t::set</qualifiedname>
        <param>
          <type>const UComponent1 &amp;</type>
          <declname>p_component1</declname>
        </param>
        <param>
          <type>const UComponent2 &amp;</type>
          <declname>p_component2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Set value for position and velocity component </para>
</simplesect>
<simplesect kind="note"><para>Flecs set component will be added if entity doesn&apos;t the component </para>
</simplesect>
<simplesect kind="note"><para>This is for setting multiple different components to be stored into the entity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><simplesect kind="note"><para>When setting multiple components this is how flecs does it typically </para>
</simplesect>
<simplesect kind="note"><para>flecs::entity::set returns a const entity&amp; to set multiple</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="79" column="14" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1aad37069285ce1e3c47d61c3b330ae689" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UComponent</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void atlas::entity_t::remove</definition>
        <argsstring>()</argsstring>
        <name>remove</name>
        <qualifiedname>atlas::entity_t::remove</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="89" column="14" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1ab382d9e96e33a3c43002cf2457abd093" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atlas::entity_t::operator flecs::entity</definition>
        <argsstring>() const</argsstring>
        <name>operator flecs::entity</name>
        <qualifiedname>atlas::entity_t::entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="93" column="9" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1entity__t_1a99c222b2300cdb239a16fa9f911b865b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atlas::entity_t::operator flecs::entity</definition>
        <argsstring>()</argsstring>
        <name>operator flecs::entity</name>
        <qualifiedname>atlas::entity_t::entity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="95" column="9" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="TheAtlasEngine/atlas/core/scene/entity.hpp" line="18" column="5" bodyfile="TheAtlasEngine/atlas/core/scene/entity.hpp" bodystart="18" bodyend="100"/>
    <listofallmembers>
      <member refid="classatlas_1_1entity__t_1a9a4b1f94517e03d33d61dbff80cf930d" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>add</name></member>
      <member refid="classatlas_1_1entity__t_1a925077325bc7808a17904c75553f2da2" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>entity_t</name></member>
      <member refid="classatlas_1_1entity__t_1a4f8d325fdfe56287c682112c9d3117c3" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>entity_t</name></member>
      <member refid="classatlas_1_1entity__t_1a879697cc3280b1ec9057341aa188d371" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>entity_t</name></member>
      <member refid="classatlas_1_1entity__t_1af106934ead70c1b66eaf4e1ad351936a" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>get</name></member>
      <member refid="classatlas_1_1entity__t_1a246b32fea88d795f2c8e8a8e3cab7ad0" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>get_mut</name></member>
      <member refid="classatlas_1_1entity__t_1a731921a4fa54b0542d762874a6d86410" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>has</name></member>
      <member refid="classatlas_1_1entity__t_1aba5c460bfe8b1b05ba710ef1d811fb84" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>is_alive</name></member>
      <member refid="classatlas_1_1entity__t_1a7aee710d558b11e5758db4a02447fa7b" prot="private" virt="non-virtual"><scope>atlas::entity_t</scope><name>m_entity_id</name></member>
      <member refid="classatlas_1_1entity__t_1a54ac61a14f16ae97dc83486855a84f48" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>on_destruction</name></member>
      <member refid="classatlas_1_1entity__t_1ab382d9e96e33a3c43002cf2457abd093" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>operator flecs::entity</name></member>
      <member refid="classatlas_1_1entity__t_1a99c222b2300cdb239a16fa9f911b865b" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>operator flecs::entity</name></member>
      <member refid="classatlas_1_1entity__t_1aad37069285ce1e3c47d61c3b330ae689" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>remove</name></member>
      <member refid="classatlas_1_1entity__t_1ad5891e156866d930a05c19fbf612c5e9" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>set</name></member>
      <member refid="classatlas_1_1entity__t_1ab559b7c8cc70eb3400f612cc101eb8c5" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>set</name></member>
      <member refid="classatlas_1_1entity__t_1aa7e6238a804c004389feb3c44d18f4bd" prot="public" virt="non-virtual"><scope>atlas::entity_t</scope><name>~entity_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
