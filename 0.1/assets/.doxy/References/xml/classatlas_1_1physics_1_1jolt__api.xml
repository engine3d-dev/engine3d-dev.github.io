<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classatlas_1_1physics_1_1jolt__api" kind="class" language="C++" prot="public">
    <compoundname>atlas::physics::jolt_api</compoundname>
    <basecompoundref refid="classatlas_1_1physics_1_1physics__api" prot="public" virt="non-virtual">atlas::physics::physics_api</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1af64111ed432cfc6b8b3832dadfa30b67" prot="private" static="no" mutable="no">
        <type><ref refid="structatlas_1_1physics_1_1jolt__config" kindref="compound">jolt_config</ref></type>
        <definition>jolt_config atlas::physics::jolt_api::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <qualifiedname>atlas::physics::jolt_api::m_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="92" column="21" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1a49ac4d43d662c3fbbf8c426eb2eb9b44" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; JPH::PhysicsSystem &gt;</type>
        <definition>ref&lt;JPH::PhysicsSystem&gt; atlas::physics::jolt_api::m_physics_system</definition>
        <argsstring></argsstring>
        <name>m_physics_system</name>
        <qualifiedname>atlas::physics::jolt_api::m_physics_system</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="93" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1af1fd93eba1e79bcae1817ebd585d7470" prot="private" static="no" mutable="no">
        <type>flecs::world</type>
        <definition>flecs::world atlas::physics::jolt_api::m_registery</definition>
        <argsstring></argsstring>
        <name>m_registery</name>
        <qualifiedname>atlas::physics::jolt_api::m_registery</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="94" column="22" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1a9f4b80621f5958821296977f8026dba0" prot="private" static="no" mutable="no">
        <type>flecs::query&lt; <ref refid="structatlas_1_1transform" kindref="compound">transform</ref>, <ref refid="structatlas_1_1physics_1_1collider__body" kindref="compound">collider_body</ref> &gt;</type>
        <definition>flecs::query&lt;transform, collider_body&gt; atlas::physics::jolt_api::m_read_transform</definition>
        <argsstring></argsstring>
        <name>m_read_transform</name>
        <qualifiedname>atlas::physics::jolt_api::m_read_transform</qualifiedname>
        <briefdescription>
<para>Flecs querys deticated to reading and writing from jolt and atlas. Targeting transforms and colliders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="101" column="22" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1a13d44cadb608d146623ec1bd7e44d6d3" prot="private" static="no" mutable="no">
        <type>flecs::query&lt; <ref refid="structatlas_1_1physics_1_1physics__body" kindref="compound">physics_body</ref> &gt;</type>
        <definition>flecs::query&lt;physics_body&gt; atlas::physics::jolt_api::m_read_body</definition>
        <argsstring></argsstring>
        <name>m_read_body</name>
        <qualifiedname>atlas::physics::jolt_api::m_read_body</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="102" column="22" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1a0a461154b6e1cebb016b525a1ed2e92a" prot="private" static="no" mutable="no">
        <type>flecs::query&lt; <ref refid="structatlas_1_1transform" kindref="compound">transform</ref>, <ref refid="structatlas_1_1physics_1_1collider__body" kindref="compound">collider_body</ref> &gt;</type>
        <definition>flecs::query&lt;transform, collider_body&gt; atlas::physics::jolt_api::m_query_transform</definition>
        <argsstring></argsstring>
        <name>m_query_transform</name>
        <qualifiedname>atlas::physics::jolt_api::m_query_transform</qualifiedname>
        <briefdescription>
<para>Flecs querys deticated to reading and writing from jolt and atlas. Targeting physics bodies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="109" column="22" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__api_1afcec330b3c26a25161b203f9c99e6a0b" prot="private" static="no" mutable="no">
        <type>flecs::query&lt; <ref refid="structatlas_1_1physics_1_1physics__body" kindref="compound">physics_body</ref> &gt;</type>
        <definition>flecs::query&lt;physics_body&gt; atlas::physics::jolt_api::m_query_body</definition>
        <argsstring></argsstring>
        <name>m_query_body</name>
        <qualifiedname>atlas::physics::jolt_api::m_query_body</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="110" column="22" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1aef12a8dc8b3571223bc90b1a66ec439c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::physics::jolt_api::jolt_api</definition>
        <argsstring>(const jolt_config &amp;p_config, const ref&lt; JPH::PhysicsSystem &gt; &amp;p_physics_system, const flecs::world &amp;p_registery)</argsstring>
        <name>jolt_api</name>
        <qualifiedname>atlas::physics::jolt_api::jolt_api</qualifiedname>
        <param>
          <type>const <ref refid="structatlas_1_1physics_1_1jolt__config" kindref="compound">jolt_config</ref> &amp;</type>
          <declname>p_config</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; JPH::PhysicsSystem &gt; &amp;</type>
          <declname>p_physics_system</declname>
        </param>
        <param>
          <type>const flecs::world &amp;</type>
          <declname>p_registery</declname>
        </param>
        <briefdescription>
<para>Construct a new jolt api object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_config</parametername>
</parameternamelist>
<parameterdescription>
<para>All system wide runtime configurations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_physics_system</parametername>
</parameternamelist>
<parameterdescription>
<para>Passed by the engine to allow interaction between the engine and users </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_registery</parametername>
</parameternamelist>
<parameterdescription>
<para>The world this api is associated with. FIXME: This is a temperary solve until have a funciton like get_active_scenes(), added const </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="29" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1ac50e0a29ec771a156ee9676a786eb55d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::retrieve_values</definition>
        <argsstring>() override</argsstring>
        <name>retrieve_values</name>
        <qualifiedname>atlas::physics::jolt_api::retrieve_values</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a9007e7819b3ba0fbf43773e06c58c344">retrieve_values</reimplements>
        <briefdescription>
<para>Sends all atlas values to jolt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="38" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1ad19002777da3a30f2ee0859ddc66f750" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::return_values</definition>
        <argsstring>() override</argsstring>
        <name>return_values</name>
        <qualifiedname>atlas::physics::jolt_api::return_values</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a67b6983833e5ff07fcc3e39a41fccdb2">return_values</reimplements>
        <briefdescription>
<para>Sends all jolt values to atlas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="44" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1ab4913b81486366e14487c3748c039c56" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::add_force</definition>
        <argsstring>(const glm::vec3 &amp;p_force, const uint32_t &amp;p_body_id) override</argsstring>
        <name>add_force</name>
        <qualifiedname>atlas::physics::jolt_api::add_force</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a19c2c7aa7af621501957a01ad2728fa1">add_force</reimplements>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>p_force</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>p_body_id</declname>
        </param>
        <briefdescription>
<para>Targets a body and adds a force. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction and strength of force. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Gets the body in the physics world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="52" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1a293def70ca6764aabd69f12b0672cb54" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::add_linear_velocity</definition>
        <argsstring>(const glm::vec3 &amp;p_linear_velocity, const uint32_t &amp;p_body_id) override</argsstring>
        <name>add_linear_velocity</name>
        <qualifiedname>atlas::physics::jolt_api::add_linear_velocity</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a42c3066f7913d667fa3dd2b9985261cb">add_linear_velocity</reimplements>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>p_linear_velocity</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>p_body_id</declname>
        </param>
        <briefdescription>
<para>Adds linear velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_angular_velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction and strength of velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_body_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Gets the body in the physics world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="62" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1acd41294bda9bbf38997439a6e4844a01" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::add_angular_velocity</definition>
        <argsstring>(const glm::vec3 &amp;p_angular_velocity, const uint32_t &amp;p_body_id) override</argsstring>
        <name>add_angular_velocity</name>
        <qualifiedname>atlas::physics::jolt_api::add_angular_velocity</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a9683ccad9ea22ee8e0c1ef7c4c7c3be0">add_angular_velocity</reimplements>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>p_angular_velocity</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>p_body_id</declname>
        </param>
        <briefdescription>
<para>Adds angular valocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_angular_velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction and strength of velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_body_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Gets the body in the physics world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="71" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1aa8c4cc8d3a4b3097f65c731306df4fe8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::set_linear_velocity</definition>
        <argsstring>(const glm::vec3 &amp;p_velocity, const uint32_t &amp;p_body_id) override</argsstring>
        <name>set_linear_velocity</name>
        <qualifiedname>atlas::physics::jolt_api::set_linear_velocity</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a1e76d086b3951ef700d17bab5677941a">set_linear_velocity</reimplements>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>p_velocity</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>p_body_id</declname>
        </param>
        <briefdescription>
<para>Set the linear velocity of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction and strength of velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Gets the body in the physics world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="80" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__api_1aa587786dc59443ed8c156ae07ee6f7db" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_api::set_angular_velocity</definition>
        <argsstring>(const glm::vec3 &amp;p_angular_velocity, const uint32_t &amp;p_body_id) override</argsstring>
        <name>set_angular_velocity</name>
        <qualifiedname>atlas::physics::jolt_api::set_angular_velocity</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__api_1a70f6f856648bcb76d268bc4ef0e4c98f">set_angular_velocity</reimplements>
        <param>
          <type>const glm::vec3 &amp;</type>
          <declname>p_angular_velocity</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>p_body_id</declname>
        </param>
        <briefdescription>
<para>Set the angular velocity of an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angular_velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction and strength of angular velocity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Gets the body in the physics world. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="89" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>atlas::physics::jolt_api</label>
        <link refid="classatlas_1_1physics_1_1jolt__api"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>atlas::physics::physics_api</label>
        <link refid="classatlas_1_1physics_1_1physics__api"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>atlas::physics::jolt_api</label>
        <link refid="classatlas_1_1physics_1_1jolt__api"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>atlas::physics::physics_api</label>
        <link refid="classatlas_1_1physics_1_1physics__api"/>
      </node>
    </collaborationgraph>
    <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" line="17" column="5" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_api.hpp" bodystart="17" bodyend="111"/>
    <listofallmembers>
      <member refid="classatlas_1_1physics_1_1jolt__api_1acd41294bda9bbf38997439a6e4844a01" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>add_angular_velocity</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1a09d7dcca44b4442dd360ce9b5e4c52ea" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>add_angular_velocity_by_body</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1ab4913b81486366e14487c3748c039c56" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>add_force</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1aa4cf16dd7994f267cfa5ce12ab2cd5c7" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>add_force_by_body</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1a293def70ca6764aabd69f12b0672cb54" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>add_linear_velocity</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1a86e258ef558e68afb25eb8da143be7bb" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>add_linear_velocity_by_body</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1aef12a8dc8b3571223bc90b1a66ec439c" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>jolt_api</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1af64111ed432cfc6b8b3832dadfa30b67" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_config</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1a49ac4d43d662c3fbbf8c426eb2eb9b44" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_physics_system</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1afcec330b3c26a25161b203f9c99e6a0b" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_query_body</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1a0a461154b6e1cebb016b525a1ed2e92a" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_query_transform</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1a13d44cadb608d146623ec1bd7e44d6d3" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_read_body</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1a9f4b80621f5958821296977f8026dba0" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_read_transform</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1af1fd93eba1e79bcae1817ebd585d7470" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>m_registery</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1ac50e0a29ec771a156ee9676a786eb55d" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>retrieve_values</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1ad19002777da3a30f2ee0859ddc66f750" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>return_values</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1aa587786dc59443ed8c156ae07ee6f7db" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>set_angular_velocity</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1a27d46baea2e674cc994388eae335064a" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>set_angular_velocity_by_body</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__api_1aa8c4cc8d3a4b3097f65c731306df4fe8" prot="private" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>set_linear_velocity</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1af7e29b8e6a92e4ab1edc8e7334a259d2" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>set_linear_velocity_by_body</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1aaafd2deb501e9563abbaeed49467cef6" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>update_atlas_values</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1ad2e3d671fd96fc07559567834dc0d123" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_api</scope><name>update_jolt_values</name></member>
      <member refid="classatlas_1_1physics_1_1physics__api_1ae570e15aa3e6d9285ce70b2acdb06f2e" prot="public" virt="virtual"><scope>atlas::physics::jolt_api</scope><name>~physics_api</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
