<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classatlas_1_1physics_1_1jolt__collision__manager" kind="class" language="C++" prot="public">
    <compoundname>atlas::physics::jolt_collision_manager</compoundname>
    <includes refid="jolt__collision__manager_8hpp" local="no">jolt_collision_manager.hpp</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__collision__manager_1af7a9741c735c83e127e8220b7824461a" prot="private" static="yes" mutable="no">
        <type>std::unordered_map&lt; uint64_t, <ref refid="classatlas_1_1physics_1_1jolt__collision" kindref="compound">jolt_collision</ref> &gt;</type>
        <definition>std::unordered_map&lt;uint64_t, jolt_collision&gt; atlas::physics::jolt_collision_manager::m_handlers</definition>
        <argsstring></argsstring>
        <name>m_handlers</name>
        <qualifiedname>atlas::physics::jolt_collision_manager::m_handlers</qualifiedname>
        <briefdescription>
<para>Basic map to get subscribe action working. Will change later. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="69" column="35" bodyfile="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__collision__manager_1a1a46dd4bd5d8516a899028f097629a1e" prot="private" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string atlas::physics::jolt_collision_manager::m_tag</definition>
        <argsstring></argsstring>
        <name>m_tag</name>
        <qualifiedname>atlas::physics::jolt_collision_manager::m_tag</qualifiedname>
        <briefdescription>
<para>Basic way to get tag working. When we have a better idea of how the manager should work we can rework this as well. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="76" column="28" bodyfile="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__collision__manager_1a1f342fd2344760d3e6b763c2267436a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::physics::jolt_collision_manager::jolt_collision_manager</definition>
        <argsstring>()=default</argsstring>
        <name>jolt_collision_manager</name>
        <qualifiedname>atlas::physics::jolt_collision_manager::jolt_collision_manager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="16" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__collision__manager_1a233feef46e941d9b5b167e74c7943b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_collision_manager::run_collision_added</definition>
        <argsstring>(uint64_t p_id, contact_event &amp;p_event)</argsstring>
        <name>run_collision_added</name>
        <qualifiedname>atlas::physics::jolt_collision_manager::run_collision_added</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>p_id</declname>
        </param>
        <param>
          <type><ref refid="structatlas_1_1physics_1_1contact__event" kindref="compound">contact_event</ref> &amp;</type>
          <declname>p_event</declname>
        </param>
        <briefdescription>
<para>Connects an entity to a defualt or user defined <ref refid="classatlas_1_1physics_1_1jolt__collision" kindref="compound">jolt_collision</ref>. Runs the functions of <ref refid="classatlas_1_1physics_1_1jolt__collision" kindref="compound">jolt_collision</ref> passing the arguments for the user to utilize. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Generally a way to connect the id of a flecs::entity_t to a specified <ref refid="classatlas_1_1physics_1_1jolt__collision" kindref="compound">jolt_collision</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_event</parametername>
</parameternamelist>
<parameterdescription>
<para>Describes the collision that took place </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="42" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__collision__manager_1a7091e59b8500a53c8054a112166f4e14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>scope&lt; <ref refid="classatlas_1_1physics_1_1jolt__collision__manager" kindref="compound">jolt_collision_manager</ref> &gt;</type>
        <definition>static scope&lt; jolt_collision_manager &gt; atlas::physics::jolt_collision_manager::initialize</definition>
        <argsstring>(const std::string &amp;p_tag)</argsstring>
        <name>initialize</name>
        <qualifiedname>atlas::physics::jolt_collision_manager::initialize</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <briefdescription>
<para>Creates all the neccessary starting components for collisions to begin working. Is utilized by the physics engine to run user defined collisions in a simple way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Creates a tag for the collision manager so debugging later will be simplied. Specifically when there are more then one scenes in the game world at once.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>scope&lt;jolt_collision_manager&gt; is the way the engine can run the non-statics collision functions. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="30" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__collision__manager_1ac439b626b4bbf4bd1e53301397c2628a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void atlas::physics::jolt_collision_manager::subscribe_action</definition>
        <argsstring>(uint64_t p_id, jolt_collision &amp;p_collision_action)</argsstring>
        <name>subscribe_action</name>
        <qualifiedname>atlas::physics::jolt_collision_manager::subscribe_action</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>p_id</declname>
        </param>
        <param>
          <type><ref refid="classatlas_1_1physics_1_1jolt__collision" kindref="compound">jolt_collision</ref> &amp;</type>
          <declname>p_collision_action</declname>
        </param>
        <briefdescription>
<para>FIXME: These need to be implemented along with all other persisted and removed events. </para>
        </briefdescription>
        <detaileddescription>
<para>Allows the user to subscribe their own collision_handlers to the map and connecting those handlers to entities that they define.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Used to connect an entity to a collision instance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_collision_action</parametername>
</parameternamelist>
<parameterdescription>
<para>The collision handler to create actions based on the collision given.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>We need to subscribe action. This might be fixed when we have events to take and subcribes their user actions with. Or this could be done like the other subscribes that exsist. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="61" column="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This allows users to make thier own version of jolt collition and run them their own way. It allows users to interact with the calls by creating a child class of <ref refid="classatlas_1_1physics_1_1jolt__collision" kindref="compound">jolt_collision</ref> and run whatever action they want. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" line="14" column="5" bodyfile="TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp" bodystart="14" bodyend="77"/>
    <listofallmembers>
      <member refid="classatlas_1_1physics_1_1jolt__collision__manager_1a7091e59b8500a53c8054a112166f4e14" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_collision_manager</scope><name>initialize</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__collision__manager_1a1f342fd2344760d3e6b763c2267436a1" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_collision_manager</scope><name>jolt_collision_manager</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__collision__manager_1af7a9741c735c83e127e8220b7824461a" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_collision_manager</scope><name>m_handlers</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__collision__manager_1a1a46dd4bd5d8516a899028f097629a1e" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_collision_manager</scope><name>m_tag</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__collision__manager_1a233feef46e941d9b5b167e74c7943b32" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_collision_manager</scope><name>run_collision_added</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__collision__manager_1ac439b626b4bbf4bd1e53301397c2628a" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_collision_manager</scope><name>subscribe_action</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
