<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classatlas_1_1physics_1_1jolt__context" kind="class" language="C++" prot="public">
    <compoundname>atlas::physics::jolt_context</compoundname>
    <basecompoundref refid="classatlas_1_1physics_1_1physics__context" prot="public" virt="non-virtual">atlas::physics::physics_context</basecompoundref>
    <includes refid="jolt__context_8hpp" local="no">jolt_context.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a55ffd1356cd7ab7080fc9626eb48c12b" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; JPH::PhysicsSystem &gt;</type>
        <definition>ref&lt;JPH::PhysicsSystem&gt; atlas::physics::jolt_context::m_physics_system</definition>
        <argsstring></argsstring>
        <name>m_physics_system</name>
        <qualifiedname>atlas::physics::jolt_context::m_physics_system</qualifiedname>
        <briefdescription>
<para>Gives access to the physics system. Is given to <ref refid="classatlas_1_1physics_1_1jolt__api" kindref="compound">jolt_api</ref> as well. This is to allow us to give seperation of concerns. However, may change now do to Jolt conflict and unhandled dangling pointers within <ref refid="classatlas_1_1physics_1_1jolt__api" kindref="compound">jolt_api</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="40" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1ade2f1d421f1e6ea730514ad2344310a1" prot="private" static="no" mutable="no">
        <type><ref refid="structatlas_1_1physics_1_1jolt__settings" kindref="compound">jolt_settings</ref></type>
        <definition>jolt_settings atlas::physics::jolt_context::m_settings</definition>
        <argsstring></argsstring>
        <name>m_settings</name>
        <qualifiedname>atlas::physics::jolt_context::m_settings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Must be defined before physics can be initialized otherwise jolt cannot be created properly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="120" column="23" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a17c8faade60dedf8beedc51bb32d8c6e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; JPH::TempAllocatorImpl &gt;</type>
        <definition>ref&lt;JPH::TempAllocatorImpl&gt; atlas::physics::jolt_context::m_temp_allocator</definition>
        <argsstring></argsstring>
        <name>m_temp_allocator</name>
        <qualifiedname>atlas::physics::jolt_context::m_temp_allocator</qualifiedname>
        <briefdescription>
<para>Creates a static allocation of all data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="126" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a01a753a6543cae97116eed2e3c4593e8" prot="private" static="no" mutable="no">
        <type>scope&lt; JPH::JobSystemThreadPool &gt;</type>
        <definition>scope&lt;JPH::JobSystemThreadPool&gt; atlas::physics::jolt_context::m_thread_system</definition>
        <argsstring></argsstring>
        <name>m_thread_system</name>
        <qualifiedname>atlas::physics::jolt_context::m_thread_system</qualifiedname>
        <briefdescription>
<para>Sets up a thread system, either jolts or custom based on thread settings in m_settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="133" column="15" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a0edb69a113f1b90d3b2fc9a91caef40c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; <ref refid="classatlas_1_1physics_1_1broad__phase__layer__interface" kindref="compound">broad_phase_layer_interface</ref> &gt;</type>
        <definition>ref&lt;broad_phase_layer_interface&gt; atlas::physics::jolt_context::m_broad_phase_layer_interface</definition>
        <argsstring></argsstring>
        <name>m_broad_phase_layer_interface</name>
        <qualifiedname>atlas::physics::jolt_context::m_broad_phase_layer_interface</qualifiedname>
        <briefdescription>
<para>Creates filtering for the quad tree in terms of movement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="139" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a12aba4e6e9b9054ed337adf581166a43" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; <ref refid="classatlas_1_1physics_1_1object__vs__broadphase__layer" kindref="compound">object_vs_broadphase_layer</ref> &gt;</type>
        <definition>ref&lt;object_vs_broadphase_layer&gt; atlas::physics::jolt_context::m_object_vs_broadphase_filter</definition>
        <argsstring></argsstring>
        <name>m_object_vs_broadphase_filter</name>
        <qualifiedname>atlas::physics::jolt_context::m_object_vs_broadphase_filter</qualifiedname>
        <briefdescription>
<para>Creates a filter for the quad tree in terms of objects types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="145" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a1f08ecb6f15eefd05b91634ee382dd9f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; <ref refid="classatlas_1_1physics_1_1object__layer__pair__filter" kindref="compound">object_layer_pair_filter</ref> &gt;</type>
        <definition>ref&lt;object_layer_pair_filter&gt; atlas::physics::jolt_context::m_object_layer_pair_filter</definition>
        <argsstring></argsstring>
        <name>m_object_layer_pair_filter</name>
        <qualifiedname>atlas::physics::jolt_context::m_object_layer_pair_filter</qualifiedname>
        <briefdescription>
<para>Creates a filter for pairs of collisions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="151" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1af321f336eb2a0aec22a95e5bc18986d6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref</ref>&lt; <ref refid="classatlas_1_1physics_1_1contact__listener" kindref="compound">contact_listener</ref> &gt;</type>
        <definition>ref&lt;contact_listener&gt; atlas::physics::jolt_context::m_contact_listener</definition>
        <argsstring></argsstring>
        <name>m_contact_listener</name>
        <qualifiedname>atlas::physics::jolt_context::m_contact_listener</qualifiedname>
        <briefdescription>
<para>Creates a way to recognize collisions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="157" column="13" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1physics_1_1jolt__context_1a6779913ca4e5f095fea640b9d66cd5ca" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; uint64_t, JPH::RefConst&lt; JPH::Shape &gt; &gt;</type>
        <definition>std::unordered_map&lt;uint64_t, JPH::RefConst&lt;JPH::Shape&gt; &gt; atlas::physics::jolt_context::m_shape_registry</definition>
        <argsstring></argsstring>
        <name>m_shape_registry</name>
        <qualifiedname>atlas::physics::jolt_context::m_shape_registry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This map is to create the scope for shapes created by Jolt.</para>
</simplesect>
<simplesect kind="warning"><para>This is a temperary solve as it only allows pooling without regard for adding a body during runtime. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="166" column="11" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1a2c8a6dd22830be3bf1c1056df8893944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::physics::jolt_context::jolt_context</definition>
        <argsstring>(const jolt_settings &amp;p_settings)</argsstring>
        <name>jolt_context</name>
        <qualifiedname>atlas::physics::jolt_context::jolt_context</qualifiedname>
        <param>
          <type>const <ref refid="structatlas_1_1physics_1_1jolt__settings" kindref="compound">jolt_settings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="30" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1a5862390a4cca99c30d87294781d2036e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::physics::jolt_context::~jolt_context</definition>
        <argsstring>() override</argsstring>
        <name>~jolt_context</name>
        <qualifiedname>atlas::physics::jolt_context::~jolt_context</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="31" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1af58388cd77ade90af6e17f46c15f0b35" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_context::engine_create_physics_bodies</definition>
        <argsstring>() override</argsstring>
        <name>engine_create_physics_bodies</name>
        <qualifiedname>atlas::physics::jolt_context::engine_create_physics_bodies</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__context_1a6d6683f80968a5c62f18638ffe064ea8">engine_create_physics_bodies</reimplements>
        <briefdescription>
<para>Creates all of the physics bodies at the start of runtime. Utilizing the main scene provided in flecs to establish what to load. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Main scene is not defined and therefore will only utilzed level_scene as of right now. In order to fix this issue a get_main_scene() or get_main_scenes() must be created to develop a more dynamic system. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="52" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1adb806bdc4aad5dce939d403d9323b0a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_context::engine_clean_physics_bodies</definition>
        <argsstring>() override</argsstring>
        <name>engine_clean_physics_bodies</name>
        <qualifiedname>atlas::physics::jolt_context::engine_clean_physics_bodies</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__context_1a2b5621164efc0672f6232fbe197aaa0b">engine_clean_physics_bodies</reimplements>
        <briefdescription>
<para>Removes all physics bodies and shapes from level_scene. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Similar to create this only works with level_scene as of right now. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="61" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1a1f701e01bd6328ee5d25cd2d198292f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_context::engine_run_physics_step</definition>
        <argsstring>() override</argsstring>
        <name>engine_run_physics_step</name>
        <qualifiedname>atlas::physics::jolt_context::engine_run_physics_step</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__context_1af5992a8fe499e7d7a79930ce4a9e022f">engine_run_physics_step</reimplements>
        <briefdescription>
<para>Runs the actual physics. Can be called multiple times in one frame. Runs the all calculation in physics. Threads must be defined in the <ref refid="structatlas_1_1physics_1_1jolt__config" kindref="compound">jolt_config</ref> in order for this to work correctly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="69" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1a61b782b814583268b34f23029f7f9c35" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_context::engine_run_contact_added</definition>
        <argsstring>() override</argsstring>
        <name>engine_run_contact_added</name>
        <qualifiedname>atlas::physics::jolt_context::engine_run_contact_added</qualifiedname>
        <reimplements refid="classatlas_1_1physics_1_1physics__context_1a27f84ea2afc036cefbc1895f54839440">engine_run_contact_added</reimplements>
        <briefdescription>
<para>Runs a given &lt;contact added&gt; the frame the contact was created. Allows for all contacts to run after the physics has finished as to stop thread collision issues. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="77" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1a824b77bf7e04166f0ae7cc203bbe15eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_context::store_shape</definition>
        <argsstring>(uint64_t id, const JPH::RefConst&lt; JPH::Shape &gt; &amp;shape)</argsstring>
        <name>store_shape</name>
        <qualifiedname>atlas::physics::jolt_context::store_shape</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const JPH::RefConst&lt; JPH::Shape &gt; &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
<para>Jolt enforces the system to handle the shapes created instead of itself. Otherwise the ref will reach 0 and the object will crash as the shape is removed from the bopy. So a map was created to maintain the shapes scope. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>shape id to be stored in map. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>the shape that was created. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="88" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1ab7ba9af6d1c7e8cc9963b836584512a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JPH::RefConst&lt; JPH::Shape &gt;</type>
        <definition>JPH::RefConst&lt; JPH::Shape &gt; atlas::physics::jolt_context::create_shape_from_collider</definition>
        <argsstring>(flecs::entity e, const collider_body &amp;collider)</argsstring>
        <name>create_shape_from_collider</name>
        <qualifiedname>atlas::physics::jolt_context::create_shape_from_collider</qualifiedname>
        <param>
          <type>flecs::entity</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structatlas_1_1physics_1_1collider__body" kindref="compound">collider_body</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
<para>Creates a shape given a jolt collider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>the entity who shape you are creating </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collider</parametername>
</parameternamelist>
<parameterdescription>
<para>the entities jolt collider </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>JPH::RefConst&lt;JPH::Shape&gt; The shape needs to be created and stored for ref counting and scope. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="98" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1physics_1_1jolt__context_1a557eea7158b9549b8c7611b61ecfa0b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atlas::physics::jolt_context::add_body</definition>
        <argsstring>(flecs::entity e, const physics_body *body_opt, const collider_body &amp;collider, const transform_physics &amp;location, std::vector&lt; JPH::BodyCreationSettings &gt; &amp;settings_list, std::vector&lt; flecs::entity &gt; &amp;entity_list)</argsstring>
        <name>add_body</name>
        <qualifiedname>atlas::physics::jolt_context::add_body</qualifiedname>
        <param>
          <type>flecs::entity</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structatlas_1_1physics_1_1physics__body" kindref="compound">physics_body</ref> *</type>
          <declname>body_opt</declname>
        </param>
        <param>
          <type>const <ref refid="structatlas_1_1physics_1_1collider__body" kindref="compound">collider_body</ref> &amp;</type>
          <declname>collider</declname>
        </param>
        <param>
          <type>const <ref refid="structatlas_1_1transform__physics" kindref="compound">transform_physics</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <param>
          <type>std::vector&lt; JPH::BodyCreationSettings &gt; &amp;</type>
          <declname>settings_list</declname>
        </param>
        <param>
          <type>std::vector&lt; flecs::entity &gt; &amp;</type>
          <declname>entity_list</declname>
        </param>
        <briefdescription>
<para>Creates the body and shapes from queries of Rigidbody and collider. Calling Jolt create body from the physics_system to allow jolt to keep track of each shape and associate to each physics body. It then moves that physics body into the jolt simulation. Allowing Jolt to manipulate the numbers associated with it during physics_step(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="111" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This class is made to be 1 of three api wrappers for jolt. Jolt context is specifically for engine only use of the api. It wraps the inititialization, the physics step and the clean up. Allow use not to have to write batching algorithms for each time we want to change the settings of jolt physics. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="remark"><para>This is different that <ref refid="classatlas_1_1physics_1_1jolt__api" kindref="compound">jolt_api</ref>, which is the user wrapper. It is meant to contain all the effects that can happen during runtime. Where most of the data can be called by the user. m_physics_system is the only link between the two classes. Both of which use it for different purposes. Jolt context to control the functionality of the entire systems and the Jolt Api for user based control of the system and bodies.</para>
</simplesect>
<simplesect kind="remark"><para>The third api is collisions which has its own context for jolt. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>atlas::physics::jolt_context</label>
        <link refid="classatlas_1_1physics_1_1jolt__context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>atlas::physics::physics_context</label>
        <link refid="classatlas_1_1physics_1_1physics__context"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>atlas::physics::jolt_context</label>
        <link refid="classatlas_1_1physics_1_1jolt__context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>atlas::physics::physics_context</label>
        <link refid="classatlas_1_1physics_1_1physics__context"/>
      </node>
    </collaborationgraph>
    <location file="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" line="28" column="5" bodyfile="TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp" bodystart="28" bodyend="167"/>
    <listofallmembers>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a557eea7158b9549b8c7611b61ecfa0b5" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>add_body</name></member>
      <member refid="classatlas_1_1physics_1_1physics__context_1acbbf44a5b6b8cb44c5c78960d62c7aa8" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>clean_bodies</name></member>
      <member refid="classatlas_1_1physics_1_1physics__context_1ad047b283c4aca0a74229c7401e3191a2" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>contact_added_event</name></member>
      <member refid="classatlas_1_1physics_1_1physics__context_1a6c1d8cdf8349f9cfb4c9a6cfb68db0e1" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>create_bodies</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1ab7ba9af6d1c7e8cc9963b836584512a0" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>create_shape_from_collider</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1adb806bdc4aad5dce939d403d9323b0a8" prot="private" virt="virtual"><scope>atlas::physics::jolt_context</scope><name>engine_clean_physics_bodies</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1af58388cd77ade90af6e17f46c15f0b35" prot="private" virt="virtual"><scope>atlas::physics::jolt_context</scope><name>engine_create_physics_bodies</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a61b782b814583268b34f23029f7f9c35" prot="private" virt="virtual"><scope>atlas::physics::jolt_context</scope><name>engine_run_contact_added</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a1f701e01bd6328ee5d25cd2d198292f4" prot="private" virt="virtual"><scope>atlas::physics::jolt_context</scope><name>engine_run_physics_step</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a2c8a6dd22830be3bf1c1056df8893944" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>jolt_context</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a0edb69a113f1b90d3b2fc9a91caef40c" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_broad_phase_layer_interface</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1af321f336eb2a0aec22a95e5bc18986d6" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_contact_listener</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a1f08ecb6f15eefd05b91634ee382dd9f" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_object_layer_pair_filter</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a12aba4e6e9b9054ed337adf581166a43" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_object_vs_broadphase_filter</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a55ffd1356cd7ab7080fc9626eb48c12b" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_physics_system</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1ade2f1d421f1e6ea730514ad2344310a1" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_settings</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a6779913ca4e5f095fea640b9d66cd5ca" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_shape_registry</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a17c8faade60dedf8beedc51bb32d8c6e" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_temp_allocator</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a01a753a6543cae97116eed2e3c4593e8" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>m_thread_system</name></member>
      <member refid="classatlas_1_1physics_1_1physics__context_1aaaf8fcb9fbf85d6847f4ee48814005ea" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>run_physics_step</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a824b77bf7e04166f0ae7cc203bbe15eb" prot="private" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>store_shape</name></member>
      <member refid="classatlas_1_1physics_1_1jolt__context_1a5862390a4cca99c30d87294781d2036e" prot="public" virt="non-virtual"><scope>atlas::physics::jolt_context</scope><name>~jolt_context</name></member>
      <member refid="classatlas_1_1physics_1_1physics__context_1ad1229b9ec67a09bbcfe65d4a8d436845" prot="public" virt="virtual"><scope>atlas::physics::jolt_context</scope><name>~physics_context</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
