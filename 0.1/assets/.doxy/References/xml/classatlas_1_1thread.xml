<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classatlas_1_1thread" kind="class" language="C++" prot="public">
    <compoundname>atlas::thread</compoundname>
    <includes refid="core_2threads_2thread_8hpp" local="no">thread.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classatlas_1_1thread_1a4507b263b3c57bb6e6d109dd1193f998" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string atlas::thread::m_tag</definition>
        <argsstring></argsstring>
        <name>m_tag</name>
        <qualifiedname>atlas::thread::m_tag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="45" column="21" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classatlas_1_1thread_1a7b41af72aebf444612b5aa058589bf84" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread atlas::thread::m_thread</definition>
        <argsstring></argsstring>
        <name>m_thread</name>
        <qualifiedname>atlas::thread::m_thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="46" column="21" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classatlas_1_1thread_1a33720db6b5f3eba6fe6bcb1c125456ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::thread::thread</definition>
        <argsstring>(const std::string &amp;p_tag)</argsstring>
        <name>thread</name>
        <qualifiedname>atlas::thread::thread</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/threads/thread.hpp" line="26" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1ac8e917aa240fa1bfedb6364839466fef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void atlas::thread::dispatch</definition>
        <argsstring>(const T &amp;p_function)</argsstring>
        <name>dispatch</name>
        <qualifiedname>atlas::thread::dispatch</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>p_function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/threads/thread.hpp" line="29" column="14" bodyfile="TheAtlasEngine/atlas/core/threads/thread.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1a4918c64dcb1ff6b174aa397945a018f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>atlas::thread::thread</definition>
        <argsstring>()=delete</argsstring>
        <name>thread</name>
        <qualifiedname>atlas::thread::thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="24" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1ac3f0a03f6f3ed26904c764b2aba066e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atlas::thread::thread</definition>
        <argsstring>(const std::string &amp;p_tag=&quot;Undefined&quot;)</argsstring>
        <name>thread</name>
        <qualifiedname>atlas::thread::thread</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
          <defval>&quot;Undefined&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="25" column="9" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1a0e01728825755220dbbd6c1a292f4029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>atlas::thread::~thread</definition>
        <argsstring>()</argsstring>
        <name>~thread</name>
        <qualifiedname>atlas::thread::~thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="28" column="9" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1a195161c53e15ebdebf574fe156e75ec0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void atlas::thread::dispatch</definition>
        <argsstring>(T &amp;&amp;func, Args &amp;&amp;... args)</argsstring>
        <name>dispatch</name>
        <qualifiedname>atlas::thread::dispatch</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="36" column="14" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1abc39cef4755846442e9352a6dbe2f852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool atlas::thread::Joinable</definition>
        <argsstring>()</argsstring>
        <name>Joinable</name>
        <qualifiedname>atlas::thread::Joinable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="40" column="14" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classatlas_1_1thread_1a240596e047a1e367ca9f005599751a89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void atlas::thread::Join</definition>
        <argsstring>()</argsstring>
        <name>Join</name>
        <qualifiedname>atlas::thread::Join</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/thread_utils/thread.hpp" line="42" column="14" bodyfile="TheAtlasEngine/atlas/thread_utils/thread.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Current work to get back to it.</para>
</simplesect>
<simplesect kind="note"><para>The thought we are doing are the following</para>
</simplesect>
<simplesect kind="note"><para>First implement thread.hpp </para>
</simplesect>
<simplesect kind="note"><para>Implementing the thread class to wrap around the &lt;thread&gt; for handling and doing thread stuff like thread statuses, policies, etc</para>
</simplesect>
<simplesect kind="note"><para>Second improve &lt;thread_pool&gt; to first be able to spawn those threads </para>
</simplesect>
<simplesect kind="note"><para>Then once we can spawn those specific threads successfully then we apply what global update does and use a similar logic into the &lt;thread_pool&gt; itself</para>
</simplesect>
<simplesect kind="note"><para>Third, fix up the FPS and timer for udpate frequency </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="TheAtlasEngine/atlas/core/threads/thread.hpp" line="24" column="5" bodyfile="TheAtlasEngine/atlas/core/threads/thread.hpp" bodystart="24" bodyend="30"/>
    <listofallmembers>
      <member refid="classatlas_1_1thread_1ac8e917aa240fa1bfedb6364839466fef" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>dispatch</name></member>
      <member refid="classatlas_1_1thread_1a195161c53e15ebdebf574fe156e75ec0" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>dispatch</name></member>
      <member refid="classatlas_1_1thread_1a240596e047a1e367ca9f005599751a89" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>Join</name></member>
      <member refid="classatlas_1_1thread_1abc39cef4755846442e9352a6dbe2f852" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>Joinable</name></member>
      <member refid="classatlas_1_1thread_1a4507b263b3c57bb6e6d109dd1193f998" prot="private" virt="non-virtual"><scope>atlas::thread</scope><name>m_tag</name></member>
      <member refid="classatlas_1_1thread_1a7b41af72aebf444612b5aa058589bf84" prot="private" virt="non-virtual"><scope>atlas::thread</scope><name>m_thread</name></member>
      <member refid="classatlas_1_1thread_1a33720db6b5f3eba6fe6bcb1c125456ea" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>thread</name></member>
      <member refid="classatlas_1_1thread_1a4918c64dcb1ff6b174aa397945a018f8" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>thread</name></member>
      <member refid="classatlas_1_1thread_1ac3f0a03f6f3ed26904c764b2aba066e6" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>thread</name></member>
      <member refid="classatlas_1_1thread_1a0e01728825755220dbbd6c1a292f4029" prot="public" virt="non-virtual"><scope>atlas::thread</scope><name>~thread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
