<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="engine__logger_8hpp" kind="file" language="C++">
    <compoundname>engine_logger.hpp</compoundname>
    <includes refid="core_8hpp" local="no">core/core.hpp</includes>
    <includes local="no">fmt/os.h</includes>
    <includes local="no">fmt/ostream.h</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">spdlog/common.h</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includedby refid="scene_8hpp" local="no">TheAtlasEngine/atlas/core/scene/scene.hpp</includedby>
    <includedby refid="scene__object_8hpp" local="no">TheAtlasEngine/atlas/core/scene/scene_object.hpp</includedby>
    <includedby refid="sync__update_8hpp" local="no">TheAtlasEngine/atlas/core/update_handlers/sync_update.hpp</includedby>
    <includedby refid="thread__utils_2thread_8hpp" local="no">TheAtlasEngine/atlas/thread_utils/thread.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>core/core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>TheAtlasEngine/atlas/core/engine_logger.hpp</label>
        <link refid="engine__logger_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>fmt/os.h</label>
      </node>
      <node id="8">
        <label>fmt/ostream.h</label>
      </node>
      <node id="9">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>spdlog/common.h</label>
      </node>
      <node id="6">
        <label>spdlog/spdlog.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>TheAtlasEngine/atlas/core/engine_logger.hpp</label>
        <link refid="engine__logger_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TheAtlasEngine/atlas/core/scene/scene.hpp</label>
        <link refid="scene_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>TheAtlasEngine/atlas/core/scene/scene_object.hpp</label>
        <link refid="scene__object_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TheAtlasEngine/atlas/core/scene/world.hpp</label>
        <link refid="world_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>TheAtlasEngine/atlas/core/serialize/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
      </node>
      <node id="4">
        <label>TheAtlasEngine/atlas/core/system_framework/system_registry.hpp</label>
        <link refid="system__registry_8hpp_source"/>
      </node>
      <node id="13">
        <label>TheAtlasEngine/atlas/core/update_handlers/sync_update.hpp</label>
        <link refid="sync__update_8hpp_source"/>
      </node>
      <node id="6">
        <label>TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision.hpp</label>
        <link refid="jolt__collision_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>TheAtlasEngine/atlas/physics/jolt-cpp/jolt_collision_manager.hpp</label>
        <link refid="jolt__collision__manager_8hpp_source"/>
      </node>
      <node id="8">
        <label>TheAtlasEngine/atlas/physics/jolt-cpp/jolt_contact_listener.hpp</label>
        <link refid="jolt__contact__listener_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>TheAtlasEngine/atlas/physics/physics_3d/jolt/jolt_context.hpp</label>
        <link refid="jolt__context_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>TheAtlasEngine/atlas/physics/physics_3d/physics.hpp</label>
        <link refid="physics_8hpp_source"/>
      </node>
      <node id="10">
        <label>TheAtlasEngine/atlas/physics/physics_3d/physics_engine.hpp</label>
        <link refid="physics__engine_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>TheAtlasEngine/atlas/thread_utils/thread.hpp</label>
        <link refid="thread__utils_2thread_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classatlas_1_1console__log__manager" prot="public">atlas::console_log_manager</innerclass>
    <innernamespace refid="namespaceatlas">atlas</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="engine__logger_8hpp_1a83328ef8edf4610b3837175746d9b98b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_trace</definition>
        <argsstring>(spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_trace</name>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Console Loggers (These are loggers that write specifically to the console, terminal console) </para>
</simplesect>
<simplesect kind="note"><para>TODO <mdash/> Specify that engine3d will have it&apos;s own console terminal that these will be written to. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="44" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a77e105a903ff12eebec33303ef057b31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_warn</definition>
        <argsstring>(spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_warn</name>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="51" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a21fda5d200168ab5b72cba1f4c945602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_info</definition>
        <argsstring>(spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_info</name>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="58" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a865546ec87456dbb3fdbf1168a9c8ca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_error</definition>
        <argsstring>(spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_error</name>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="65" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a234aaabd14b25043f9fb9cc3cc2728d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_fatal</definition>
        <argsstring>(spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_fatal</name>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="72" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a82764343a3b1a6ca48be66d9bbe060d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_trace_tagged</definition>
        <argsstring>(const std::string &amp;p_tag, spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_trace_tagged</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="82" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a788eebedfe055aba8ec0956bfeaa1852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_info_tagged</definition>
        <argsstring>(const std::string &amp;p_tag, spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_info_tagged</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="91" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a6b07b9a2a00b241ac66fa220371974f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_warn_tagged</definition>
        <argsstring>(const std::string &amp;p_tag, spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_warn_tagged</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="99" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="99" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1a6ca8ab0d39da2183cd1b099a529020c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_error_tagged</definition>
        <argsstring>(const std::string &amp;p_tag, spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_error_tagged</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="107" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="engine__logger_8hpp_1af28b93369fbf74f3a2dbe54731a384d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void console_log_fatal_tagged</definition>
        <argsstring>(const std::string &amp;p_tag, spdlog::format_string_t&lt; T... &gt; fmt, T &amp;&amp;... args)</argsstring>
        <name>console_log_fatal_tagged</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_tag</declname>
        </param>
        <param>
          <type>spdlog::format_string_t&lt; T... &gt;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TheAtlasEngine/atlas/core/engine_logger.hpp" line="116" column="1" bodyfile="TheAtlasEngine/atlas/core/engine_logger.hpp" bodystart="116" bodyend="121"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;core/core.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/os.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fmt/ostream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceatlas" kindref="compound">atlas</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="classatlas_1_1console__log__manager" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classatlas_1_1console__log__manager" kindref="compound">console_log_manager</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="classatlas_1_1console__log__manager_1aac5abb903e382cdb4b427739c48fcfa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classatlas_1_1console__log__manager_1aac5abb903e382cdb4b427739c48fcfa2" kindref="member">initialize_logger_manager</ref>(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>pattern<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%^[%T]<sp/>%n:<sp/>%v%$&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_current_logger(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Undefined<sp/>g_Tag<sp/>in<sp/>console_logger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_new_logger(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Undefined<sp/>Tag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespaceatlas_1ab3da5cb9c9a3e605fab407b9dad31db3" kindref="member">ref&lt;spdlog::logger&gt;</ref><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>ref&lt;spdlog::logger&gt;&gt;<sp/>s_loggers;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">console_log_trace(spdlog::format_string_t&lt;T...&gt;<sp/>fmt,<sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(</highlight><highlight class="stringliteral">&quot;engine3d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;trace(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">console_log_warn(spdlog::format_string_t&lt;T...&gt;<sp/>fmt,<sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(</highlight><highlight class="stringliteral">&quot;engine3d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;warn(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">console_log_info(spdlog::format_string_t&lt;T...&gt;<sp/>fmt,<sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(</highlight><highlight class="stringliteral">&quot;engine3d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;info(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">console_log_error(spdlog::format_string_t&lt;T...&gt;<sp/>fmt,<sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(</highlight><highlight class="stringliteral">&quot;engine3d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;error(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">console_log_fatal(spdlog::format_string_t&lt;T...&gt;<sp/>fmt,<sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(</highlight><highlight class="stringliteral">&quot;engine3d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;critical(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">console_log_trace_tagged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::format_string_t&lt;T...&gt;<sp/>fmt,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(p_tag)-&gt;trace(fmt,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">console_log_info_tagged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::format_string_t&lt;T...&gt;<sp/>fmt,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(p_tag)-&gt;info(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">console_log_warn_tagged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::format_string_t&lt;T...&gt;<sp/>fmt,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(p_tag)-&gt;warn(fmt,<sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">console_log_error_tagged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::format_string_t&lt;T...&gt;<sp/>fmt,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(p_tag)-&gt;error(fmt,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">console_log_fatal_tagged(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>p_tag,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::format_string_t&lt;T...&gt;<sp/>fmt,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>atlas::console_log_manager::get(p_tag)-&gt;critical(fmt,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;T&gt;(args)...);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="TheAtlasEngine/atlas/core/engine_logger.hpp"/>
  </compounddef>
</doxygen>
