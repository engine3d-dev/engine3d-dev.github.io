/**
 * @file camera.hpp
 * @author Generated by Chatgpt
 * @brief This is the last folder test
 * @version 0.0.01a
 * @date 2025-01-11
 * 
 * @copyright Apache 2.0 2025
 * 
 */
#pragma once

#include <string>

/**
 * @brief A simple Camera class for managing position, rotation, and projection.
 * 
 * This class simulates a basic 3D camera system with utility methods to manage
 * its position and orientation.
 */
class Camera {
private:
    float position[3];   ///< Camera position in 3D space (x, y, z).
    float rotation[3];   ///< Camera rotation (pitch, yaw, roll).

public:
    /**
     * @brief Default constructor initializing camera at the origin with no rotation.
     */
    Camera() {
        position[0] = position[1] = position[2] = 0.0f;
        rotation[0] = rotation[1] = rotation[2] = 0.0f;
    }

    /**
     * @brief Sets the position of the camera.
     * 
     * @param x The x-coordinate of the position.
     * @param y The y-coordinate of the position.
     * @param z The z-coordinate of the position.
     */
    void setPosition(float x, float y, float z);

    /**
     * @brief Sets the rotation of the camera.
     * 
     * @param pitch Rotation around the x-axis.
     * @param yaw Rotation around the y-axis.
     * @param roll Rotation around the z-axis.
     */
    void setRotation(float pitch, float yaw, float roll);

    /**
     * @brief Moves the camera along a direction vector.
     * 
     * @param dx Movement along the x-axis.
     * @param dy Movement along the y-axis.
     * @param dz Movement along the z-axis.
     */
    void move(float dx, float dy, float dz);
    /**
     * @brief Prints the current position and rotation of the camera.
     */
    void printStatus() const;

    /**
     * @brief Checks if the camera is at the origin (0, 0, 0).
     * 
     * @return `true` if the camera is at the origin, otherwise `false`.
     */
    bool isAtOrigin() const;
    /**
     * @brief Returns the camera's position as a formatted string.
     * 
     * @return A string in the format "(x, y, z)".
     */
    std::string getPositionString() const;

    /**
     * @brief Rotates the camera around the yaw axis by a given degree.
     * 
     * @param degrees The angle to rotate.
     * 
     * @warning Rotation is additive and does not clamp values between 0 and 360 degrees.
     */
    void rotateYaw(float degrees);
};
