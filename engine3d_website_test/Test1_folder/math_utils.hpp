/**
 * @file math_utils.hpp
 * @author Generated by chatGPT
 * @brief This is a test!
 * @version 0.0.01a
 * @date 2025-01-11
 * 
 * @copyright Apache 2.0 2025
 * 
 */

#pragma once

#include<string>

/**
 * @brief Class
 * 
 */
class math_utils {
public:

    /**
    * @brief Calculates the factorial of a number.
    * 
    * @param n The number to calculate the factorial for.
    * @return The factorial of the number.
    * 
    * @warning Throws `std::invalid_argument` if the number is negative.
    * 
    * @note 
    * @code
    * #include <iostream>
    * 
    * int main() 
    * {
    *     int number = 5; // Starting Number
    *     long long result = factorial(number); // Produces 5*4*3*2*1
    * 
    *     std::cout << "Factorial of " << number << " is: " << result << std::endl;
    * 
    *     return 0;
    * }
    * @endcode
    */
    static long long factorial(int n);

    /**
    * @brief Computes the greatest common divisor (GCD) of two numbers.
    * 
    * @param a The first number.
    * @param b The second number.
    * @return The GCD of the two numbers.
    * 
    * @remark Uses the Euclidean algorithm.
    */
    static int gcd(int a, int b);

    /**
    * @brief Finds the nth Fibonacci number.
    * 
    * @bug May cause stack overflow for large values of n.
    *
    * 
    * @param n The position in the Fibonacci sequence.
    * @return The nth Fibonacci number.
    * 
    *
    * @remark Uses a recursive implementation. Consider using a dynamic approach for large n.
    * 
    */
    static int fibonacci(int n);
};